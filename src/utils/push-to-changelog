#! /bin/bash

#push-to-CHANGELOG
#by Julian Sangillo
#Append the latest changes to the top of the current CHANGELOG (based on major revision) and sectioned of by full version.

LATEST_CHANGES="$1";
MAJOR_REVISION="$2";
FULL_VERSION="$3";
REVISION_TYPE="$4";
CHANGELOG="$5";

if [ "$#" -ne 5 ]; then
	log "Illegal number of arguments.";
	exit 1
fi

if ! [[ "$FULL_VERSION" =~ ^[0-9]+(\.[0-9]+)*$ ]]; then
	log "Could not push to CHANGELOG! The version '$FULL_VERSION' is invalid.";
	exit 16
fi

if [[ " major minor build patch " != *" ${REVISION_TYPE,,} "* ]]; then
	log "Could not push to CHANGELOG! The revision type must be one of the following: major, minor, build, or patch.";
	exit 32
fi

pushToChangelog() {
	log "Pushing to CHANGELOG ...";
	
	local temp="/tmp/CHANGELOG.tmp";
	
	log "Major Revision: $MAJOR_REVISION";
	log "Full Version: $FULL_VERSION";
	log "Revision Type: $REVISION_TYPE";
	log "CHANGELOG File: $CHANGELOG";
	log "Total Changes: $(echo "$LATEST_CHANGES" | awk NF | wc -l)";
	
	if [ -z "$LATEST_CHANGES" ]; then
		log "No changes to push. Skipping";
		return;
	fi
	
	log "Logging changes";
	
	echo "# CHANGELOG<br>$MAJOR_REVISION" > $temp;
	echo "[//]: # (V:$FULL_VERSION T:${REVISION_TYPE,,})" >> $temp;
	echo "### $FULL_VERSION" >> $temp;
	echo "$LATEST_CHANGES" >> $temp;
	
	log "Changes logged";
	
	if [ "${REVISION_TYPE,,}" != "major" ] && [ -f $CHANGELOG ]; then
		tail -n +2 $CHANGELOG >> $temp;
	fi
	
	mv -f $temp $CHANGELOG;
	
	commit $CHANGELOG "${REVISION_TYPE^^} $FULL_VERSION Update CHANGELOG.md" || exit $?;
	
	log "Changes successfully logged"
}

pushToChangelog;
exit 0